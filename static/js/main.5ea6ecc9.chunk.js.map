{"version":3,"sources":["api.ts","types/FilterBy.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","FilterBy","getUser","userId","TodoList","todos","onTodoSelect","selectedTodo","className","map","todo","id","title","completed","isSelectedTodo","classNames","type","onClick","filterByOptions","Object","values","filterByOptionsNames","All","Active","Completed","TodoFilter","query","onQueryChange","onQueryReset","filterBy","onFilterChange","value","onChange","filterByOption","selected","placeholder","style","pointerEvents","Loader","TodoModal","onClose","useState","user","setUser","loadUserInfo","userID","a","loadedUser","useEffect","href","email","name","App","setTodos","isLoading","setIsLoading","setSelectedTodo","setQuery","setFilterBy","loadTodos","todosFromServer","filter","toLocaleLowerCase","includes","event","currentTarget","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5ea6ecc9.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum FilterBy {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  onTodoSelect: (todo: Todo) => void;\n  selectedTodo: Todo | null;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onTodoSelect,\n  selectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => {\n        const {\n          id,\n          title,\n          completed,\n        } = todo;\n\n        const isSelectedTodo = todo === selectedTodo;\n\n        return (\n          <tr\n            key={id}\n            data-cy=\"todo\"\n            className=\"\"\n          >\n            <td className=\"is-vcentered\">\n              {id}\n            </td>\n            <td className=\"is-vcentered\">\n              {completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={classNames(\n                  { 'has-text-danger': !completed },\n                  { 'has-text-success': completed },\n                )}\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onTodoSelect(todo)}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={classNames(\n                      'far',\n                      { 'fa-eye': !isSelectedTodo },\n                      { 'fa-eye-slash': isSelectedTodo },\n                    )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import React from 'react';\n\nimport { FilterBy } from '../../types/FilterBy';\n\nconst filterByOptions = Object.values(FilterBy);\n\nconst filterByOptionsNames = {\n  [FilterBy.All]: 'All',\n  [FilterBy.Active]: 'Active',\n  [FilterBy.Completed]: 'Completed',\n};\n\ntype Props = {\n  query: string;\n  onQueryChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  onQueryReset: () => void;\n  filterBy: string;\n  onFilterChange: (event: React.ChangeEvent<HTMLSelectElement>) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  onQueryChange,\n  onQueryReset,\n  filterBy,\n  onFilterChange,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={filterBy}\n          onChange={onFilterChange}\n        >\n          {filterByOptions.map(filterByOption => (\n            <option\n              value={filterByOption}\n              selected={filterBy === filterByOption}\n            >\n              {filterByOptionsNames[filterByOption]}\n            </option>\n          ))}\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={onQueryChange}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={onQueryReset}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\n\nimport { getUser } from '../../api';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo;\n  onClose: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, onClose }) => {\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = todo;\n\n  const [user, setUser] = useState<User | null>(null);\n\n  const loadUserInfo = async (userID: number) => {\n    const loadedUser = await getUser(userID);\n\n    setUser(loadedUser);\n  };\n\n  useEffect(() => {\n    loadUserInfo(userId);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {user ? (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong\n                className={classNames(\n                  { 'has-text-success': completed },\n                  { 'has-text-danger': !completed },\n                )}\n              >\n                {completed\n                  ? (\n                    'Done'\n                  )\n                  : (\n                    'Planned'\n                  )}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      ) : (\n        <Loader />\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { FilterBy } from './types/FilterBy';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [query, setQuery] = useState('');\n  const [filterBy, setFilterBy] = useState(FilterBy.All);\n\n  const loadTodos = async () => {\n    setIsLoading(true);\n    let todosFromServer = await getTodos();\n\n    if (query) {\n      todosFromServer = todosFromServer.filter(todo => (\n        todo.title.toLocaleLowerCase().includes(query.toLocaleLowerCase())\n      ));\n    }\n\n    switch (filterBy) {\n      case 'completed':\n        todosFromServer = todosFromServer.filter(todo => (\n          todo.completed\n        ));\n        break;\n\n      case 'active':\n        todosFromServer = todosFromServer.filter(todo => (\n          !todo.completed\n        ));\n        break;\n\n      default:\n        break;\n    }\n\n    setTodos(todosFromServer);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    loadTodos();\n  }, [query, filterBy]);\n\n  const handleTodoSelect = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  const handleModalCloseButtonClick = () => {\n    setSelectedTodo(null);\n  };\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.currentTarget.value);\n  };\n\n  const handleQueryReset = () => {\n    setQuery('');\n  };\n\n  const handleFilterChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setFilterBy(event.currentTarget.value as FilterBy);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                onQueryChange={handleQueryChange}\n                onQueryReset={handleQueryReset}\n                filterBy={filterBy}\n                onFilterChange={handleFilterChange}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? (\n                  <Loader />\n                )\n                : (\n                  <TodoList\n                    todos={todos}\n                    onTodoSelect={handleTodoSelect}\n                    selectedTodo={selectedTodo}\n                  />\n                )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {\n        selectedTodo && (\n          <TodoModal\n            todo={selectedTodo}\n            onClose={handleModalCloseButtonClick}\n          />\n        )\n      }\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}