{"version":3,"sources":["api.ts","types/FilterBy.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/LoadingError/LoadingError.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","a","fetch","response","ok","status","statusText","headers","Error","includes","json","FilterBy","getUser","userId","TodoList","todos","onTodoSelect","selectedTodo","className","map","todo","id","title","completed","isSelectedTodo","classNames","type","onClick","filterByOptions","Object","values","filterByOptionsNames","All","Active","Completed","TodoFilter","query","onQueryChange","onQueryReset","filterBy","onFilterChange","value","onChange","filterByOption","selected","placeholder","style","pointerEvents","Loader","LoadingError","TodoModal","onClose","useState","user","setUser","isLoading","setIsLoading","hasLoadingError","setHasLoadingError","loadUserInfo","userID","loadedUser","useEffect","href","email","name","App","setTodos","setSelectedTodo","setQuery","setFilterBy","loadTodos","todosFromServer","filter","toLocaleLowerCase","event","currentTarget","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.66868683.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  // return wait(300)\n  //   .then(() => fetch(fullURL))\n  //   .then(res => res.json());\n  return wait(300)\n    .then(async () => {\n      const response = await fetch(fullURL);\n      const {\n        ok,\n        status,\n        statusText,\n        headers,\n      } = response;\n\n      if (!ok) {\n        throw new Error(`${status} - ${statusText}`);\n      }\n\n      if (!headers.get('content-type')?.includes('application/json')) {\n        throw new Error('Content-type is not supported');\n      }\n\n      return response.json();\n    });\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum FilterBy {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  onTodoSelect: (todo: Todo) => void;\n  selectedTodo: Todo | null;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onTodoSelect,\n  selectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => {\n        const {\n          id,\n          title,\n          completed,\n        } = todo;\n\n        const isSelectedTodo = todo === selectedTodo;\n\n        return (\n          <tr\n            key={id}\n            data-cy=\"todo\"\n            className=\"\"\n          >\n            <td className=\"is-vcentered\">\n              {id}\n            </td>\n            <td className=\"is-vcentered\">\n              {completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={classNames(\n                  { 'has-text-danger': !completed },\n                  { 'has-text-success': completed },\n                )}\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onTodoSelect(todo)}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={classNames(\n                      'far',\n                      { 'fa-eye': !isSelectedTodo },\n                      { 'fa-eye-slash': isSelectedTodo },\n                    )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import React from 'react';\n\nimport { FilterBy } from '../../types/FilterBy';\n\nconst filterByOptions = Object.values(FilterBy);\n\nconst filterByOptionsNames = {\n  [FilterBy.All]: 'All',\n  [FilterBy.Active]: 'Active',\n  [FilterBy.Completed]: 'Completed',\n};\n\ntype Props = {\n  query: string;\n  onQueryChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  onQueryReset: () => void;\n  filterBy: string;\n  onFilterChange: (event: React.ChangeEvent<HTMLSelectElement>) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  onQueryChange,\n  onQueryReset,\n  filterBy,\n  onFilterChange,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={filterBy}\n          onChange={onFilterChange}\n        >\n          {filterByOptions.map(filterByOption => (\n            <option\n              value={filterByOption}\n              selected={filterBy === filterByOption}\n            >\n              {filterByOptionsNames[filterByOption]}\n            </option>\n          ))}\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={onQueryChange}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={onQueryReset}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\n\nexport const LoadingError: React.FC = () => (\n  <div className=\"notification is-danger is-light\">\n    An error occured while loading!\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\n\nimport { getUser } from '../../api';\nimport { Loader } from '../Loader';\nimport { LoadingError } from '../LoadingError';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo;\n  onClose: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, onClose }) => {\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = todo;\n\n  const [user, setUser] = useState<User>();\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasLoadingError, setHasLoadingError] = useState(false);\n\n  const loadUserInfo = async (userID: number) => {\n    setIsLoading(true);\n\n    try {\n      const loadedUser = await getUser(userID);\n\n      setUser(loadedUser);\n    } catch (error) {\n      setHasLoadingError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadUserInfo(userId);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading && (\n        <Loader />\n      )}\n\n      {user && (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong\n                className={classNames(\n                  { 'has-text-success': completed },\n                  { 'has-text-danger': !completed },\n                )}\n              >\n                {completed\n                  ? (\n                    'Done'\n                  )\n                  : (\n                    'Planned'\n                  )}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n\n      {hasLoadingError && (\n        <>\n          <LoadingError />\n\n          <button\n            type=\"button\"\n            className=\"button is-danger\"\n            onClick={onClose}\n          >\n            Close\n          </button>\n        </>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { FilterBy } from './types/FilterBy';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { LoadingError } from './components/LoadingError';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasLoadingError, setHasLoadingError] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [query, setQuery] = useState('');\n  const [filterBy, setFilterBy] = useState(FilterBy.All);\n\n  const loadTodos = async () => {\n    setIsLoading(true);\n\n    try {\n      let todosFromServer = await getTodos();\n\n      if (query) {\n        todosFromServer = todosFromServer.filter(todo => (\n          todo.title.toLocaleLowerCase().includes(query.toLocaleLowerCase())\n        ));\n      }\n\n      switch (filterBy) {\n        case 'completed':\n          todosFromServer = todosFromServer.filter(todo => (\n            todo.completed\n          ));\n          break;\n\n        case 'active':\n          todosFromServer = todosFromServer.filter(todo => (\n            !todo.completed\n          ));\n          break;\n\n        default:\n          break;\n      }\n\n      setTodos(todosFromServer);\n    } catch (error) {\n      setHasLoadingError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadTodos();\n  }, [query, filterBy]);\n\n  const handleTodoSelect = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  const handleModalCloseButtonClick = () => {\n    setSelectedTodo(null);\n  };\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.currentTarget.value);\n  };\n\n  const handleQueryReset = () => {\n    setQuery('');\n  };\n\n  const handleFilterChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setFilterBy(event.currentTarget.value as FilterBy);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                onQueryChange={handleQueryChange}\n                onQueryReset={handleQueryReset}\n                filterBy={filterBy}\n                onFilterChange={handleFilterChange}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? (\n                  <Loader />\n                )\n                : (\n                  <>\n                    {todos.length > 0\n                      ? (\n                        <TodoList\n                          todos={todos}\n                          onTodoSelect={handleTodoSelect}\n                          selectedTodo={selectedTodo}\n                        />\n                      )\n                      : (\n                        <p>\n                          No todos found\n                        </p>\n                      )}\n\n                    {hasLoadingError && (\n                      <LoadingError />\n                    )}\n                  </>\n                )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      { selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          onClose={handleModalCloseButtonClick}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}